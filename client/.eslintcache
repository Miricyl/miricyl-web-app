[{"/Users/steven/STA/miricyl/client/src/index.js":"1","/Users/steven/STA/miricyl/client/src/App.js":"2","/Users/steven/STA/miricyl/client/src/serviceWorker.js":"3","/Users/steven/STA/miricyl/client/src/components/Navbar.js":"4","/Users/steven/STA/miricyl/client/src/containers/HomePageContainer.js":"5","/Users/steven/STA/miricyl/client/src/components/MultiChoiceQuestion.js":"6","/Users/steven/STA/miricyl/client/src/components/TextBoxQuestion.js":"7","/Users/steven/STA/miricyl/client/src/components/Results.js":"8","/Users/steven/STA/miricyl/client/src/api/GoogleServer.js":"9","/Users/steven/STA/miricyl/client/src/api/nodeServer.js":"10","/Users/steven/STA/miricyl/client/src/telemetry/TelemetryService.js":"11","/Users/steven/STA/miricyl/client/src/telemetry/telemetry-provider.jsx":"12"},{"size":503,"mtime":1607860249312,"results":"13","hashOfConfig":"14"},{"size":346,"mtime":1607860249305,"results":"15","hashOfConfig":"14"},{"size":5098,"mtime":1607860249313,"results":"16","hashOfConfig":"14"},{"size":495,"mtime":1607860249308,"results":"17","hashOfConfig":"14"},{"size":10680,"mtime":1608396224439,"results":"18","hashOfConfig":"14"},{"size":3247,"mtime":1608395916498,"results":"19","hashOfConfig":"14"},{"size":2143,"mtime":1608395062102,"results":"20","hashOfConfig":"14"},{"size":10257,"mtime":1608395062101,"results":"21","hashOfConfig":"14"},{"size":142,"mtime":1605563262634,"results":"22","hashOfConfig":"14"},{"size":249,"mtime":1608395062098,"results":"23","hashOfConfig":"14"},{"size":1656,"mtime":1608395062105,"results":"24","hashOfConfig":"14"},{"size":1256,"mtime":1608395062107,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ac0x9w",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/steven/STA/miricyl/client/src/index.js",[],["53","54"],"/Users/steven/STA/miricyl/client/src/App.js",[],"/Users/steven/STA/miricyl/client/src/serviceWorker.js",[],"/Users/steven/STA/miricyl/client/src/components/Navbar.js",[],"/Users/steven/STA/miricyl/client/src/containers/HomePageContainer.js",["55","56","57","58","59","60","61"],"/Users/steven/STA/miricyl/client/src/components/MultiChoiceQuestion.js",["62","63","64"],"/Users/steven/STA/miricyl/client/src/components/TextBoxQuestion.js",["65"],"import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { IoIosArrowDropleft } from \"react-icons/io\";\nimport \"../styles/global.css\";\n\nconst TextBoxQuestion = ({\n  onComplete,\n  onBackClicked,\n  backgroundToUse = \"one\",\n  postcode,\n}) => {\n  const [text, setText] = useState(\"\");\n  const checkPostcode = () => {\n    if (postcode) {\n      setText(`${postcode}`);\n    }\n  };\n\n  useEffect(() => {\n    checkPostcode();\n  }, []);\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <div className={`question-${backgroundToUse}-container`}>\n      <div className=\"question-grid-container\">\n        <div className=\"title-description-container\">\n          <h1 className=\"question-title\">\n            Search mental health resources & services that can help you feel\n            better\n          </h1>\n          <h2 className=\"question-page-detail-text\">\n            Boost is here for you if you need trusted guidance on accessing\n            resources and services that can positively impact your mental\n            health. We will guide you in finding the treatment and help you\n            need.\n          </h2>\n        </div>\n        <div>\n          <div className=\"select-container-q4\">\n            <p className=\"question-text\">\n              Enter the first part of your postcode to find services and support\n              in your area\n            </p>\n\n            <input\n              className=\"postcode-select\"\n              type=\"text\"\n              value={text}\n              onChange={handleChange}\n              placeholder=\"Enter your postcode\"\n            ></input>\n\n            <br />\n          </div>\n\n          <div className=\"bottom-navigation\">\n            {onBackClicked && (\n              <IoIosArrowDropleft\n                className=\"back-button\"\n                onClick={onBackClicked}\n              />\n            )}\n            <button className=\"next-button\" onClick={() => onComplete(text)}>\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(TextBoxQuestion);\n","/Users/steven/STA/miricyl/client/src/components/Results.js",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles/global.css\";\nimport { IconContext } from \"react-icons\";\nimport { BiPhone } from \"react-icons/bi\";\nimport { BiEnvelope } from \"react-icons/bi\";\nimport { BiChat } from \"react-icons/bi\";\nimport { BiMap } from \"react-icons/bi\";\nimport { withRouter } from \"react-router-dom\";\nimport { IoIosArrowDropleft } from \"react-icons/io\";\nimport ReactStars from \"react-rating-stars-component\";\n\nconst Results = ({\n  onBackClicked,\n  selectedNeeds,\n  selectedSupportTypes,\n  selectedPersonalisations,\n  postcode = \"\",\n  charities,\n}) => {\n  const [prioritisedResults, setprioritisedResults] = useState([]);\n  const [allCharities, setAllCharities] = useState([]);\n\n  useEffect(() => {\n    constructCharityObjects();\n  }, []);\n\n  useEffect(() => {\n    sortCharities();\n  }, [allCharities]);\n\n  const sortCharities = () => {\n    let filteredCharities = allCharities;\n\n    // if (selectedSupportTypes.length > 0) {\n    //   filteredCharities = filteredCharities.filter(\n    //     (charity) =>\n    //       charity.typesOfSupportOffered.filter((supportType) =>\n    //         selectedSupportTypes.includes(supportType)\n    //       ).length > 0\n    //   );\n    // }\n\n    if (selectedNeeds.length > 0) {\n      filteredCharities = filteredCharities.filter((charity) => {\n        return selectedNeeds.every((need) => charity.needsMet.includes(need));\n      });\n    }\n\n    if (postcode != \"\") {\n      filteredCharities = filteredCharities.filter(\n        (charity) => charity.OuterCode.toUpperCase() == postcode.toUpperCase()\n      );\n    }\n\n    const prioritisedCharities = filteredCharities\n      .filter((charity) => charity.NationalService === \"YES\" || postcode != \"\")\n      .sort((a, b) => noOfMatchedSupportTypes(a, b) || alphabetical(a, b));\n\n    setprioritisedResults(prioritisedCharities);\n  };\n\n  const noOfMatchedSupportTypes = (a, b) =>\n    b.matchedTypesOfSupportOffered.length -\n    a.matchedTypesOfSupportOffered.length;\n\n  const alphabetical = (a, b) => a.OrgName.localeCompare(b.OrgName);\n\n  // const needsMet = (a, b) => b.needsMet.length - a.needsMet.length;\n\n  // const personalisations = (a, b) =>\n  //   b.personalisationsMet.length - a.personalisationsMet.length;\n\n  const constructCharityObjects = () => {\n    let locationSortedCharities;\n\n    if (postcode == \"\") {\n      locationSortedCharities = charities.sort((a, b) => {\n        return a.NationalService === \"YES\"\n          ? -1\n          : b.NationalService === \"YES\"\n          ? 1\n          : 0;\n      });\n    } else {\n      locationSortedCharities = charities.sort((a, b) => {\n        return a.OuterCode.toUpperCase() === postcode.toUpperCase()\n          ? -1\n          : b.OuterCode.toUpperCase() === postcode.toUpperCase()\n          ? 1\n          : 0;\n      });\n    }\n\n    const uniqueOrgIds = [\n      ...new Set(locationSortedCharities.map((charity) => charity.OrgID)),\n    ];\n\n    const charityObjects = uniqueOrgIds.map((orgId) => {\n      const charity = charities.find((charity) => charity.OrgID === orgId);\n      let servicesFromCharity = charities.filter((charity) => {\n        return (\n          charity.OrgID == orgId &&\n          (postcode === \"\"\n            ? charity.NationalService === \"YES\"\n            : charity.OuterCode.toUpperCase() === postcode.toUpperCase())\n        );\n      });\n\n      // This filtering logic will need to be changed once the use filter interface is implemented\n      // as for now it deleted any unselected filters which the user may wish to enable\n\n      const needsMet = [\n        ...new Set(servicesFromCharity.map((service) => service.UserOption)),\n      ].filter((need) => selectedNeeds.includes(need));\n\n      const typesOfSupportOffered = [\n        ...new Set(\n          servicesFromCharity.map((service) => service.UserOption_Type)\n        ),\n      ];\n\n      const matchedTypesOfSupportOffered = [\n        ...new Set(\n          servicesFromCharity\n            .filter(\n              (service) =>\n                selectedNeeds.includes(service.UserOption) &&\n                selectedSupportTypes.includes(service.UserOption_Type)\n            )\n            .map((matchedService) => matchedService.UserOption_Type)\n        ),\n      ];\n\n      const personalisationsMet = [\n        ...new Set(\n          servicesFromCharity.map((service) => service.Personalisation)\n        ),\n      ];\n\n      // This stuff is causing pass by reference issues currently\n      // delete charity.TypeOfSupport;\n      // delete charity.UserOption_Type;\n      // delete charity.UserOption;\n      // delete charity.Personalisation;\n\n      return {\n        ...charity,\n        needsMet,\n        typesOfSupportOffered,\n        matchedTypesOfSupportOffered,\n        personalisationsMet,\n      };\n    });\n\n    setAllCharities(charityObjects);\n  };\n\n  const PrioritisedListOfCharities = prioritisedResults.map((charity) => (\n    <div className=\"results-list-container\" key={charity.PlaceID}>\n      <div className=\"results-title-container\">\n        {charity.Logo ? (\n          <a href={charity.ServiceURL} target=\"_blank\">\n            <img className=\"results-list-logo\" src={charity.Logo} />\n          </a>\n        ) : (\n          <div></div>\n        )}\n\n        <div className=\"results-list-title-service\">\n          {charity.ServiceURL ? (\n            <p className=\"results-list-title\">\n              {\" \"}\n              <a href={charity.ServiceURL} target=\"_blank\">\n                {charity.OrgName}\n              </a>\n            </p>\n          ) : (\n            <p className=\"results-list-title\">{charity.OrgName}</p>\n          )}\n\n          <p className=\"results-list-service-description\">\n            {charity.ServiceDescription}\n          </p>\n          {charity.googleRating ? (\n            <p>\n              {\" \"}\n              <ReactStars\n                count={5}\n                value={charity.googleRating}\n                isHalf={true}\n              />\n              {charity.googleRating}{\" \"}\n            </p>\n          ) : (\n            <p>\n              {\" \"}\n              <ReactStars count={5} value={0} isHalf={true} />\n              No ratings found{\" \"}\n            </p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"results-button-container\">\n        {charity.PhoneNo && (\n          <button className=\"results-list-button\" type=\"button\">\n            <IconContext.Provider\n              value={{ className: \"results-react-button-icon\" }}\n            >\n              <a href={\"tel:\" + charity.PhoneNo}>\n                <BiPhone /> Call\n              </a>\n            </IconContext.Provider>\n          </button>\n        )}\n\n        {charity.ServiceURL && (\n          <button className=\"results-list-button\" type=\"button\">\n            <IconContext.Provider\n              value={{ className: \"results-react-button-icon\" }}\n            >\n              <a href={charity.ServiceURL} target=\"_blank\">\n                <BiChat /> Chat{\" \"}\n              </a>\n            </IconContext.Provider>\n          </button>\n        )}\n\n        {charity.EmailAddress && (\n          <button className=\"results-list-button\" type=\"button\">\n            <IconContext.Provider\n              value={{ className: \"results-react-button-icon\" }}\n            >\n              <a class=\"mailto\" href={\"mailto:\" + charity.EmailAddress}>\n                <BiEnvelope /> Email\n              </a>\n            </IconContext.Provider>\n          </button>\n        )}\n      </div>\n\n      {charity.OpeningTime && (\n        <p className=\"results-list-sub-title\">\n          <IconContext.Provider\n            value={{ className: \"results-react-icons-detail\" }}\n          >\n            {\" \"}\n            <BiPhone /> Phone Support:\n          </IconContext.Provider>\n        </p>\n      )}\n      <p className=\"results-list-service-detail\">{charity.OpeningTime}</p>\n\n      {charity.PhysicalAddress && (\n        <p className=\"results-list-sub-title\">\n          <IconContext.Provider\n            value={{ className: \"results-react-icons-detail\" }}\n          >\n            {\" \"}\n            <BiMap /> Address:\n          </IconContext.Provider>\n        </p>\n      )}\n      <p className=\"results-list-service-detail\">{charity.PhysicalAddress}</p>\n\n      {/* TODO: REMOVE INLINE CSS */}\n      <div style={{ display: \"flex\" }}>\n        {charity.needsMet.map((need) => (\n          <span className=\"results-list-needs-tag\">{need}</span>\n        ))}\n      </div>\n\n      <div style={{ display: \"flex\" }}>\n        {charity.personalisationsMet.map((personalisation) => (\n          <span className=\"results-list-personalisation-tag\">\n            {personalisation}\n          </span>\n        ))}\n      </div>\n\n      {charity.typesOfSupportOffered && (\n        <p className=\"results-list-sub-title\">Types of Service:</p>\n      )}\n\n      {charity.typesOfSupportOffered.map((supportType) => {\n        return <li className=\"results-list-service-detail\">{supportType}</li>;\n      })}\n\n      {charity.OrgDescription && (\n        <p className=\"results-list-sub-title\">About</p>\n      )}\n      <p className=\"results-list-service-detail\">{charity.OrgDescription}</p>\n    </div>\n  ));\n\n  return (\n    <div className=\"results-page-container\">\n      <div className=\"results-wrapper\">\n        <div className=\"title-description-container\">\n          <h1 className=\"question-title\">Search results</h1>\n        </div>\n        <div className=\"results-page-display\">{PrioritisedListOfCharities}</div>\n        <div className=\"bottom-navigation\">\n          {onBackClicked && (\n            <IoIosArrowDropleft\n              className=\"back-button\"\n              onClick={onBackClicked}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Results);\n","/Users/steven/STA/miricyl/client/src/api/GoogleServer.js",[],"/Users/steven/STA/miricyl/client/src/api/nodeServer.js",[],"/Users/steven/STA/miricyl/client/src/telemetry/TelemetryService.js",[],"/Users/steven/STA/miricyl/client/src/telemetry/telemetry-provider.jsx",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":9,"column":10,"nodeType":"87","messageId":"88","endLine":9,"endColumn":24},{"ruleId":"89","severity":1,"message":"90","line":91,"column":34,"nodeType":"91","messageId":"92","endLine":91,"endColumn":36},{"ruleId":"93","severity":1,"message":"94","line":144,"column":54,"nodeType":"95","messageId":"96","endLine":144,"endColumn":56},{"ruleId":"85","severity":1,"message":"97","line":165,"column":9,"nodeType":"87","messageId":"88","endLine":165,"endColumn":18},{"ruleId":"85","severity":1,"message":"98","line":268,"column":9,"nodeType":"87","messageId":"88","endLine":268,"endColumn":33},{"ruleId":"89","severity":1,"message":"90","line":277,"column":38,"nodeType":"91","messageId":"92","endLine":277,"endColumn":40},{"ruleId":"89","severity":1,"message":"90","line":278,"column":33,"nodeType":"91","messageId":"92","endLine":278,"endColumn":35},{"ruleId":"93","severity":1,"message":"99","line":19,"column":26,"nodeType":"95","messageId":"96","endLine":19,"endColumn":28},{"ruleId":"89","severity":1,"message":"90","line":38,"column":28,"nodeType":"91","messageId":"92","endLine":38,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":47,"column":6,"nodeType":"102","endLine":47,"endColumn":19,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":22,"column":6,"nodeType":"102","endLine":22,"endColumn":8,"suggestions":"105"},{"ruleId":"85","severity":1,"message":"106","line":11,"column":8,"nodeType":"87","messageId":"88","endLine":11,"endColumn":18},{"ruleId":"100","severity":1,"message":"107","line":26,"column":6,"nodeType":"102","endLine":26,"endColumn":8,"suggestions":"108"},{"ruleId":"100","severity":1,"message":"109","line":30,"column":6,"nodeType":"102","endLine":30,"endColumn":20,"suggestions":"110"},{"ruleId":"93","severity":1,"message":"94","line":55,"column":18,"nodeType":"95","messageId":"96","endLine":55,"endColumn":20},{"ruleId":"93","severity":1,"message":"99","line":57,"column":54,"nodeType":"95","messageId":"96","endLine":57,"endColumn":56},{"ruleId":"93","severity":1,"message":"94","line":62,"column":74,"nodeType":"95","messageId":"96","endLine":62,"endColumn":76},{"ruleId":"85","severity":1,"message":"111","line":75,"column":9,"nodeType":"87","messageId":"88","endLine":75,"endColumn":17},{"ruleId":"85","severity":1,"message":"112","line":77,"column":9,"nodeType":"87","messageId":"88","endLine":77,"endColumn":21},{"ruleId":"85","severity":1,"message":"113","line":80,"column":9,"nodeType":"87","messageId":"88","endLine":80,"endColumn":25},{"ruleId":"93","severity":1,"message":"99","line":90,"column":18,"nodeType":"95","messageId":"96","endLine":90,"endColumn":20},{"ruleId":"93","severity":1,"message":"99","line":121,"column":25,"nodeType":"95","messageId":"96","endLine":121,"endColumn":27},{"ruleId":"114","severity":1,"message":"115","line":174,"column":40,"nodeType":"116","endLine":174,"endColumn":55},{"ruleId":"117","severity":1,"message":"118","line":175,"column":13,"nodeType":"119","endLine":175,"endColumn":69},{"ruleId":"114","severity":1,"message":"115","line":185,"column":44,"nodeType":"116","endLine":185,"endColumn":59},{"ruleId":"114","severity":1,"message":"115","line":234,"column":44,"nodeType":"116","endLine":234,"endColumn":59},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'IoLogoFacebook' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'getUnique' is assigned a value but never used.","'filterByPersonalisations' is assigned a value but never used.","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selected'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has a missing dependency: 'checkPostcode'. Either include it or remove the dependency array.",["123"],"'nodeServer' is defined but never used.","React Hook useEffect has a missing dependency: 'constructCharityObjects'. Either include it or remove the dependency array.",["124"],"React Hook useEffect has a missing dependency: 'sortCharities'. Either include it or remove the dependency array.",["125"],"'needsMet' is assigned a value but never used.","'supportTypes' is assigned a value but never used.","'personalisations' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [optionsList, selected]",{"range":"134","text":"135"},"Update the dependencies array to be: [checkPostcode]",{"range":"136","text":"137"},"Update the dependencies array to be: [constructCharityObjects]",{"range":"138","text":"139"},"Update the dependencies array to be: [allCharities, sortCharities]",{"range":"140","text":"141"},[1203,1216],"[optionsList, selected]",[487,489],"[checkPostcode]",[818,820],"[constructCharityObjects]",[870,884],"[allCharities, sortCharities]"]