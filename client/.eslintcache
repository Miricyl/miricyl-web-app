[{"/Users/steven/STA/miricyl/client/src/index.js":"1","/Users/steven/STA/miricyl/client/src/serviceWorker.js":"2","/Users/steven/STA/miricyl/client/src/App.js":"3","/Users/steven/STA/miricyl/client/src/components/FlagsProvider.js":"4","/Users/steven/STA/miricyl/client/src/components/Navbar.js":"5","/Users/steven/STA/miricyl/client/src/containers/HomePageContainer.js":"6","/Users/steven/STA/miricyl/client/src/firebase.js":"7","/Users/steven/STA/miricyl/client/src/components/TextBoxQuestion.js":"8","/Users/steven/STA/miricyl/client/src/components/MultiChoiceQuestion.js":"9","/Users/steven/STA/miricyl/client/src/api/nodeServer.js":"10","/Users/steven/STA/miricyl/client/src/telemetry/TelemetryService.js":"11","/Users/steven/STA/miricyl/client/src/telemetry/telemetry-provider.jsx":"12","/Users/steven/STA/miricyl/client/src/components/Results/Results.jsx":"13","/Users/steven/STA/miricyl/client/src/components/Header.js":"14","/Users/steven/STA/miricyl/client/src/components/SubHeader.js":"15","/Users/steven/STA/miricyl/client/src/components/BackButton.js":"16","/Users/steven/STA/miricyl/client/src/components/OrgCard/OrgCard.jsx":"17","/Users/steven/STA/miricyl/client/src/components/Filter/Filter.jsx":"18"},{"size":503,"mtime":1607860249312,"results":"19","hashOfConfig":"20"},{"size":5098,"mtime":1607860249313,"results":"21","hashOfConfig":"20"},{"size":539,"mtime":1610999232964,"results":"22","hashOfConfig":"20"},{"size":1060,"mtime":1609268658981,"results":"23","hashOfConfig":"20"},{"size":634,"mtime":1609268658983,"results":"24","hashOfConfig":"20"},{"size":7676,"mtime":1610999232967,"results":"25","hashOfConfig":"20"},{"size":295,"mtime":1609268658986,"results":"26","hashOfConfig":"20"},{"size":1813,"mtime":1609268658985,"results":"27","hashOfConfig":"20"},{"size":1873,"mtime":1609268658982,"results":"28","hashOfConfig":"20"},{"size":251,"mtime":1608500231982,"results":"29","hashOfConfig":"20"},{"size":1656,"mtime":1608500546342,"results":"30","hashOfConfig":"20"},{"size":1256,"mtime":1608500546343,"results":"31","hashOfConfig":"20"},{"size":4596,"mtime":1610999232967,"results":"32","hashOfConfig":"20"},{"size":240,"mtime":1609268658981,"results":"33","hashOfConfig":"20"},{"size":391,"mtime":1609268658984,"results":"34","hashOfConfig":"20"},{"size":299,"mtime":1610999232965,"results":"35","hashOfConfig":"20"},{"size":5400,"mtime":1610999232966,"results":"36","hashOfConfig":"20"},{"size":2926,"mtime":1610999232965,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ac0x9w",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/steven/STA/miricyl/client/src/index.js",[],["78","79"],"/Users/steven/STA/miricyl/client/src/serviceWorker.js",[],"/Users/steven/STA/miricyl/client/src/App.js",[],"/Users/steven/STA/miricyl/client/src/components/FlagsProvider.js",["80"],"import React, { useEffect, createContext, useState } from \"react\";\nimport { firebase } from \"../firebase\";\n\nexport const FlagsContext = createContext({});\nconst remoteConfig = firebase.remoteConfig();\n\n// Only for development\nremoteConfig.settings = {\n  minimumFetchIntervalMillis: 300000,\n};\nconst FlagsProvider = ({ defaults, children }) => {\n  const [flags, setFlags] = useState(defaults);\n\n  useEffect(() => {\n    remoteConfig.defaultConfig = defaults;\n    remoteConfig\n      .fetchAndActivate()\n      .then((activated) => {\n        return remoteConfig.getAll();\n      })\n      .then((remoteFlags) => {\n        const newFlags = {\n          ...flags,\n        };\n        for (const [key, config] of Object.entries(remoteFlags)) {\n          if (config._value) {\n            newFlags[key] = parseInt(config._value);\n          }\n        }\n\n        setFlags(newFlags);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  return (\n    <FlagsContext.Provider value={flags}>{children}</FlagsContext.Provider>\n  );\n};\n\nexport default FlagsProvider;\n","/Users/steven/STA/miricyl/client/src/components/Navbar.js",[],"/Users/steven/STA/miricyl/client/src/containers/HomePageContainer.js",[],"/Users/steven/STA/miricyl/client/src/firebase.js",[],"/Users/steven/STA/miricyl/client/src/components/TextBoxQuestion.js",["81"],"import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/global.css\";\nimport Header from \"./Header\";\nimport SubHeader from \"./SubHeader\";\nimport BackButton from \"./BackButton\";\n\nconst TextBoxQuestion = ({\n  onComplete,\n  onBackClicked,\n  backgroundToUse = \"one\",\n  postcode,\n}) => {\n  const [text, setText] = useState(\"\");\n  const checkPostcode = () => {\n    if (postcode) {\n      setText(`${postcode}`);\n    }\n  };\n\n  useEffect(() => {\n    checkPostcode();\n  }, []);\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <div className={`question-${backgroundToUse}-container`}>\n      <div className=\"question-grid-container\">\n        <div className=\"title-description-container\">\n          <Header />\n          <SubHeader />\n        </div>\n        <div>\n          <div className=\"select-container-q4\">\n            <p className=\"question-text\" test-id=\"question-title\">\n              Enter the first part of your postcode to find services and support\n              in your area\n            </p>\n\n            <input\n              className=\"postcode-select\"\n              type=\"text\"\n              value={text}\n              onChange={handleChange}\n              placeholder=\"Enter your postcode\"\n              test-id=\"text-input-field\"\n            ></input>\n\n            <br />\n          </div>\n\n          <div className=\"bottom-navigation\">\n            {onBackClicked && <BackButton onBackClicked={onBackClicked} />}\n            <button\n              className=\"next-button\"\n              onClick={() => onComplete(text)}\n              test-id=\"next-button\"\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(TextBoxQuestion);\n","/Users/steven/STA/miricyl/client/src/components/MultiChoiceQuestion.js",[],"/Users/steven/STA/miricyl/client/src/api/nodeServer.js",[],"/Users/steven/STA/miricyl/client/src/telemetry/TelemetryService.js",[],"/Users/steven/STA/miricyl/client/src/telemetry/telemetry-provider.jsx",[],"/Users/steven/STA/miricyl/client/src/components/Results/Results.jsx",[],"/Users/steven/STA/miricyl/client/src/components/Header.js",[],"/Users/steven/STA/miricyl/client/src/components/SubHeader.js",[],"/Users/steven/STA/miricyl/client/src/components/BackButton.js",[],"/Users/steven/STA/miricyl/client/src/components/OrgCard/OrgCard.jsx",["82","83","84"],"import React, { useState } from \"react\";\n\nimport * as styles from \"./orgCard.module.scss\";\nimport { IconContext } from \"react-icons\";\nimport { BiPhone } from \"react-icons/bi\";\nimport { BiEnvelope } from \"react-icons/bi\";\nimport { BiChat } from \"react-icons/bi\";\nimport { MdKeyboardArrowDown, MdKeyboardArrowUp } from \"react-icons/md\";\n\nimport ReactStars from \"react-rating-stars-component\";\n\nconst OrgCard = ({ charity }) => {\n  const [isExapnded, setIsExpanded] = useState(false);\n\n  return (\n    <div className={styles.container}>\n      <OrgOverview charity={charity} />\n      <OptionsMet services={charity.Services} />\n      <div className={styles.servicesContainer}>\n        {charity.Services.slice(\n          0,\n          isExapnded ? charity.Services.length : 2\n        ).map((service) => (\n          <Service service={service} />\n        ))}\n      </div>\n      <OrgDetails\n        email={charity.Email}\n        phone={charity.PhoneNo}\n        address={charity.Address}\n      />\n      <button\n        className={styles.expandButtonContainer}\n        onClick={() => {\n          setIsExpanded(!isExapnded);\n        }}\n        disabled={charity.Services.length <= 2}\n      >\n        {isExapnded ? (\n          <MdKeyboardArrowDown className={`${styles.expandIcon}`} />\n        ) : (\n          <MdKeyboardArrowUp\n            className={`${styles.expandIcon} ${\n              charity.Services.length <= 2 && styles.disabled\n            }`}\n          />\n        )}\n      </button>\n    </div>\n  );\n};\n\nconst OrgOverview = ({ charity }) => {\n  return (\n    <div className={styles.overviewContainer}>\n      <div className={styles.logoContainer}>\n        <a href={charity.OrgURL} target=\"_blank\">\n          <img\n            className={styles.orgLogo}\n            src={`/images/$web/${charity.OrgID}.png`}\n            alt={`${charity.OrgName} logo`}\n          />\n        </a>\n      </div>\n      <div className={styles.overviewInformationContainer}>\n        <span className={styles.orgName}>{charity.OrgName}</span>\n        <span className={styles.orgDescription}>{charity.OrgDescription}</span>\n        <span>Ratings placeholder</span>\n      </div>\n      <div className={styles.distanceBox}>tbi</div>\n    </div>\n  );\n};\n\nconst OptionsMet = ({ services }) => {\n  const uniqueMatchedNeeds = [\n    ...new Set(...services.map((service) => service.matchedNeeds)),\n  ];\n\n  const uniqueMatchedSupportTypes = [\n    ...new Set(...services.map((service) => service.matchedTypesOfSupport)),\n  ];\n  const uniqueMatchedPersonalisations = [\n    ...new Set(...services.map((service) => service.matchedPersonalisations)),\n  ];\n\n  return (\n    <div className={styles.optionsMetContainer}>\n      {uniqueMatchedNeeds.map((need) => (\n        <span className={`${styles.optionBox} ${styles.need}`}>{need}</span>\n      ))}\n      {uniqueMatchedSupportTypes.map((supportType) => (\n        <span className={`${styles.optionBox} ${styles.supportType}`}>\n          {supportType}\n        </span>\n      ))}\n      {uniqueMatchedPersonalisations.map((personalisation) => (\n        <span className={`${styles.optionBox} ${styles.personalisation}`}>\n          {personalisation}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nconst Service = ({ service }) => {\n  return (\n    <div className={styles.serviceContainer}>\n      <span className={styles.serviceName}>{service.ServiceName}</span>\n      <span className={styles.serviceInfo}>{service.PhoneNo}</span>\n      <span className={styles.serviceInfo}>{service.OpeningTimes}</span>\n      <span className={styles.serviceInfo}>{service.PhysicalAddress}</span>\n      <div className={styles.serviceContactBoxes}>\n        {service.PhoneNo && (\n          <button className=\"results-list-button\" type=\"button\">\n            <IconContext.Provider\n              value={{ className: \"results-react-button-icon\" }}\n            >\n              <a href={\"tel:\" + service.PhoneNo}>\n                <BiPhone /> Call\n              </a>\n            </IconContext.Provider>\n          </button>\n        )}\n\n        {service.ServiceUrl && (\n          <button className=\"results-list-button\" type=\"button\">\n            <IconContext.Provider\n              value={{ className: \"results-react-button-icon\" }}\n            >\n              <a href={service.ServiceUrl} target=\"_blank\">\n                <BiChat /> Chat{\" \"}\n              </a>\n            </IconContext.Provider>\n          </button>\n        )}\n\n        {service.EmailAddress && (\n          <button className=\"results-list-button\" type=\"button\">\n            <IconContext.Provider\n              value={{ className: \"results-react-button-icon\" }}\n            >\n              <a class=\"mailto\" href={\"mailto:\" + service.EmailAddress}>\n                <BiEnvelope /> Email\n              </a>\n            </IconContext.Provider>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst OrgDetails = ({ phone, email, address }) => {\n  return (\n    <div className={styles.orgDetailsContainer}>\n      <span className={styles.orgDetailsTitle}>\n        Organisation contact details:\n      </span>\n      <div className={styles.contactDetailsContainer}>\n        <span>\n          <b>Phone:</b> {email ?? \"placeholder\"}\n        </span>\n        <span>\n          <b>Email:</b> {phone ?? \"placeholder\"}\n        </span>\n        <span>\n          <b>Address:</b> {address ?? \"placeholder\"}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default OrgCard;\n","/Users/steven/STA/miricyl/client/src/components/Filter/Filter.jsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":34,"column":6,"nodeType":"91","endLine":34,"endColumn":8,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":23,"column":6,"nodeType":"91","endLine":23,"endColumn":8,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":10,"column":8,"nodeType":"97","messageId":"98","endLine":10,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":57,"column":34,"nodeType":"101","endLine":57,"endColumn":49},{"ruleId":"99","severity":1,"message":"100","line":131,"column":44,"nodeType":"101","endLine":131,"endColumn":59},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'defaults' and 'flags'. Either include them or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'checkPostcode'. Either include it or remove the dependency array.",["105"],"no-unused-vars","'ReactStars' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [defaults, flags]",{"range":"110","text":"111"},"Update the dependencies array to be: [checkPostcode]",{"range":"112","text":"113"},[928,930],"[defaults, flags]",[523,525],"[checkPostcode]"]
