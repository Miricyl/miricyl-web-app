<<<<<<< HEAD
[{"/Users/steven/STA/miricyl/client/src/index.js":"1","/Users/steven/STA/miricyl/client/src/App.js":"2","/Users/steven/STA/miricyl/client/src/serviceWorker.js":"3","/Users/steven/STA/miricyl/client/src/components/Navbar.js":"4","/Users/steven/STA/miricyl/client/src/containers/HomePageContainer.js":"5","/Users/steven/STA/miricyl/client/src/components/MultiChoiceQuestion.js":"6","/Users/steven/STA/miricyl/client/src/components/TextBoxQuestion.js":"7","/Users/steven/STA/miricyl/client/src/components/Results.js":"8","/Users/steven/STA/miricyl/client/src/api/GoogleServer.js":"9","/Users/steven/STA/miricyl/client/src/api/nodeServer.js":"10","/Users/steven/STA/miricyl/client/src/telemetry/TelemetryService.js":"11","/Users/steven/STA/miricyl/client/src/telemetry/telemetry-provider.jsx":"12","/Users/steven/STA/miricyl/client/src/api/postcodeServer.js":"13","/Users/steven/STA/miricyl/client/src/components/FlagsProvider.js":"14","/Users/steven/STA/miricyl/client/src/hooks/useFlags.js":"15","/Users/steven/STA/miricyl/client/src/components/SubHeader.js":"16","/Users/steven/STA/miricyl/client/src/components/Header.js":"17","/Users/steven/STA/miricyl/client/src/components/BackButton.js":"18","/Users/steven/STA/miricyl/client/src/components/Filter.js":"19","/Users/steven/STA/miricyl/client/src/firebase.js":"20","/Users/steven/STA/miricyl/client/src/components/FilterSubSection.js":"21"},{"size":503,"mtime":1607860249312,"results":"22","hashOfConfig":"23"},{"size":476,"mtime":1609268658978,"results":"24","hashOfConfig":"23"},{"size":5098,"mtime":1607860249313,"results":"25","hashOfConfig":"23"},{"size":634,"mtime":1609268658983,"results":"26","hashOfConfig":"23"},{"size":7247,"mtime":1609617350386,"results":"27","hashOfConfig":"23"},{"size":1873,"mtime":1609268658982,"results":"28","hashOfConfig":"23"},{"size":1813,"mtime":1609268658985,"results":"29","hashOfConfig":"23"},{"size":15243,"mtime":1609797431211,"results":"30","hashOfConfig":"23"},{"size":142,"mtime":1605563262634,"results":"31","hashOfConfig":"23"},{"size":251,"mtime":1608500231982,"results":"32","hashOfConfig":"23"},{"size":1656,"mtime":1608500546342,"results":"33","hashOfConfig":"23"},{"size":1256,"mtime":1608500546343,"results":"34","hashOfConfig":"23"},{"size":115,"mtime":1609269469816,"results":"35","hashOfConfig":"23"},{"size":1060,"mtime":1609268658981,"results":"36","hashOfConfig":"23"},{"size":201,"mtime":1609268658987,"results":"37","hashOfConfig":"23"},{"size":391,"mtime":1609268658984,"results":"38","hashOfConfig":"23"},{"size":240,"mtime":1609268658981,"results":"39","hashOfConfig":"23"},{"size":287,"mtime":1609268658979,"results":"40","hashOfConfig":"23"},{"size":1348,"mtime":1609617350380,"results":"41","hashOfConfig":"23"},{"size":295,"mtime":1609268658986,"results":"42","hashOfConfig":"23"},{"size":822,"mtime":1609617350382,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1ac0x9w",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/steven/STA/miricyl/client/src/index.js",[],["93","94"],"/Users/steven/STA/miricyl/client/src/App.js",[],"/Users/steven/STA/miricyl/client/src/serviceWorker.js",[],"/Users/steven/STA/miricyl/client/src/components/Navbar.js",[],"/Users/steven/STA/miricyl/client/src/containers/HomePageContainer.js",["95","96","97"],"import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { useFlags } from \"../hooks/useFlags\";\nimport nodeServer from \"../api/nodeServer\";\nimport MultiChoiceQuestion from \"../components/MultiChoiceQuestion\";\nimport TextBoxQuestion from \"../components/TextBoxQuestion\";\nimport Results from \"../components/Results\";\nimport { getAppInsights } from \"../telemetry/TelemetryService\";\nimport TelemetryProvider from \"../telemetry/telemetry-provider\";\n\nconst HomePageContainer = ({ history }) => {\n  const [needs, setNeeds] = useState([]);\n  const [supportTypes, setSupportTypes] = useState([]);\n  const [personalisations, setPersonalisations] = useState([]);\n\n  const [charities, setCharities] = useState([]);\n\n  const [postcode, setPostcode] = useState(\"\");\n\n  let appInsights = getAppInsights();\n\n  // const { filter } = useFlags();\n  const onBackClicked = () => {\n    history.goBack();\n  };\n\n  const trackEvent = (type, selected) => {\n    appInsights.trackEvent({\n      page: type,\n      selected: selected,\n    });\n  };\n\n  useEffect(() => {\n    getAllOptionsFromServer();\n  }, []);\n\n  // QUESTION - 1: Needs\n\n  const getAllOptionsFromServer = () => {\n    nodeServer.get(\"/needs\").then((res) => {\n      const needsResponse = res.data;\n      needsResponse.sort((a, b) => a.Need.localeCompare(b.Need));\n      const userNeeds = needsResponse.map((need) => {\n        return { value: need.Need, isSelected: false };\n      });\n      setNeeds(userNeeds);\n    });\n\n    nodeServer\n      .get(\"/charities\")\n      .then((res) => {\n        const foundCharities = res.data;\n        setCharities(foundCharities);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    nodeServer.get(\"/types\").then((res) => {\n      const supportTypesResponse = res.data;\n\n      const uniqueSupportTypes = [\n        ...new Set(\n          supportTypesResponse.map((supportType) => supportType.UserOption_Type)\n        ),\n      ].map((supportType) => {\n        return { value: supportType, isSelected: false };\n      });\n\n      setSupportTypes(uniqueSupportTypes);\n    });\n\n    nodeServer.get(\"/personalisations\").then((res) => {\n      const personalisationsResponse = res.data\n        .map((personalisation) => personalisation.Description)\n        .filter((personalisation) => personalisation != \"\");\n      const UserPersonalisations = personalisationsResponse.map(\n        (personalisation) => {\n          return { value: personalisation, isSelected: false };\n        }\n      );\n      setPersonalisations(UserPersonalisations);\n    });\n  };\n\n  const onToggleNeedSelected = (selectedNeed) => {\n    setNeeds(\n      [\n        ...needs.filter((need) => need != selectedNeed),\n        { ...selectedNeed, isSelected: !selectedNeed.isSelected },\n      ].sort((a, b) => a.value.localeCompare(b.value))\n    );\n  };\n\n  const handleNeedsCompleted = () => {\n    trackEvent(\n      \"needs\",\n      needs.filter((need) => need.isSelected).map((need) => need.value)\n    );\n    history.push(\"/service-types\");\n  };\n\n  //QUESTION 2 - Support Types:\n\n  const onToggleSupportTypeSelected = (selectedSupportType) => {\n    const indexOfSupportType = supportTypes.findIndex(\n      (supportType) => supportType === selectedSupportType\n    );\n    const startOfArray = supportTypes.slice(0, indexOfSupportType);\n    const endOfArray = supportTypes.slice(\n      indexOfSupportType + 1,\n      supportTypes.length\n    );\n    setSupportTypes([\n      ...startOfArray,\n      { ...selectedSupportType, isSelected: !selectedSupportType.isSelected },\n      ...endOfArray,\n    ]);\n  };\n\n  const handleSupportTypesCompleted = () => {\n    trackEvent(\n      \"Support Types\",\n      supportTypes\n        .filter((supportType) => supportType.isSelected)\n        .map((supportType) => supportType.value)\n    );\n    history.push(\"/personalise\");\n  };\n\n  // QUESTION 3 - Personalisations:\n\n  const onTogglePersonalisationSelected = (selectedPersonalisation) => {\n    const indexOfPersonalisation = personalisations.findIndex(\n      (personalisation) => personalisation === selectedPersonalisation\n    );\n    const startOfArray = personalisations.slice(0, indexOfPersonalisation);\n    const endOfArray = personalisations.slice(\n      indexOfPersonalisation + 1,\n      personalisations.length\n    );\n    setPersonalisations([\n      ...startOfArray,\n      {\n        ...selectedPersonalisation,\n        isSelected: !selectedPersonalisation.isSelected,\n      },\n      ...endOfArray,\n    ]);\n  };\n\n  const handlePersonalisationsCompleted = () => {\n    trackEvent(\n      \"Personalisations\",\n      personalisations\n        .filter((personalisation) => personalisation.isSelected)\n        .map((personalisation) => personalisation.value)\n    );\n    history.push(\"/postcode\");\n  };\n\n  // QUESTION 4 - Postcode:\n\n  const handlePostcodeSearchCompleted = (text) => {\n    if (text === \"Enter your postcode\") {\n      text = \"\";\n    }\n    setPostcode(text);\n    history.push(\"/results\");\n  };\n\n  return (\n    <>\n      <TelemetryProvider\n        instrumentationKey=\"__instrumentationKey__\"\n        after={() => {\n          appInsights = getAppInsights();\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/\">\n            <MultiChoiceQuestion\n              optionsList={needs}\n              onToggleItemSelected={onToggleNeedSelected}\n              onComplete={handleNeedsCompleted}\n              questionTitle=\"What can we help you with?\"\n            />\n          </Route>\n          <Route exact path=\"/service-types\">\n            <MultiChoiceQuestion\n              optionsList={supportTypes}\n              onToggleItemSelected={onToggleSupportTypeSelected}\n              onComplete={handleSupportTypesCompleted}\n              questionTitle=\"What types of support are you looking for?\"\n              onBackClicked={onBackClicked}\n              backgroundToUse=\"two\"\n            />\n          </Route>\n          <Route exact path=\"/personalise\">\n            <MultiChoiceQuestion\n              optionsList={personalisations}\n              onToggleItemSelected={onTogglePersonalisationSelected}\n              onComplete={handlePersonalisationsCompleted}\n              questionTitle=\"Personalise your results\"\n              onBackClicked={onBackClicked}\n              backgroundToUse=\"three\"\n            />\n          </Route>\n          <Route exact path=\"/postcode\">\n            <TextBoxQuestion\n              onComplete={handlePostcodeSearchCompleted}\n              onBackClicked={onBackClicked}\n              backgroundToUse=\"four\"\n              postcode={postcode}\n            />\n          </Route>\n          <Route exact path=\"/results\">\n            <Results\n              onBackClicked={onBackClicked}\n              needs={needs}\n              supportTypes={supportTypes}\n              personalisations={personalisations}\n              postcode={postcode}\n              charities={charities}\n              onToggleNeedSelected={onToggleNeedSelected}\n              onToggleSupportTypeSelected={onToggleSupportTypeSelected}\n              onTogglePersonalisationSelected={onTogglePersonalisationSelected}\n            />\n          </Route>\n        </Switch>\n      </TelemetryProvider>\n    </>\n  );\n};\n\nexport default withRouter(HomePageContainer);\n","/Users/steven/STA/miricyl/client/src/components/MultiChoiceQuestion.js",["98","99","100"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles/global.css\";\nimport { IoIosArrowDropleft } from \"react-icons/io\";\n\nconst MultiChoiceQuestion = ({\n  optionsList,\n  onComplete,\n  questionTitle,\n  onBackClicked,\n  selected,\n  backgroundToUse = \"one\",\n}) => {\n  const [options, setOptions] = useState([]);\n\n  const handleOptionClicked = (selectedOption) => {\n    const indexOfSelectedOption = options.findIndex(\n      (option) => option == selectedOption\n    );\n\n    const toggledOption = {\n      ...selectedOption,\n      isSelected: !selectedOption.isSelected,\n    };\n\n    const startOfArray = options.slice(0, indexOfSelectedOption);\n    const endOfArray = options.slice(indexOfSelectedOption + 1);\n\n    setOptions([...startOfArray, toggledOption, ...endOfArray]);\n  };\n\n  useEffect(() => {\n    const optionsListForDisplay = optionsList.map((option) => {\n\n      // check if selected\n      var isSelected = false;\n      selected.map((value) => {\n\n        if (value === option) {\n          isSelected = true;\n        }\n      });\n      return { value: option, isSelected: isSelected };\n    });\n    setOptions(optionsListForDisplay);\n  }, [optionsList]);\n\n  const OptionsList = () => {\n    return options.map((option) => {\n      var isSelected = option.isSelected;\n      return (\n        <button\n          onClick={() => handleOptionClicked(option)}\n          className={\n            isSelected ? \"question-button-selected\" : \"question-button\"\n          }\n          value={option.value}\n          key={option.value}\n          id={option.value}\n        >\n          {option.value}\n        </button>\n      );\n    });\n  };\n\n  return (\n    <div className={`question-${backgroundToUse}-container`}>\n      <div className=\"question-grid-container\">\n        <div className=\"title-description-container\">\n          <h1 className=\"question-title\">\n            Search mental health resources & services that can help you feel\n            better\n          </h1>\n          <h2 className=\"question-page-detail-text\">\n            Boost is here for you if you need trusted guidance on accessing\n            resources and services that can positively impact your mental\n            health. We will guide you in finding the treatment and help you\n            need.\n          </h2>\n        </div>\n\n        <div>\n          <div className=\"select-container\">\n            <p className=\"question-text\">{questionTitle}</p>\n            <p className=\"question-subtext\">select all that apply</p>\n\n            <OptionsList />\n\n            <br />\n          </div>\n          <div className=\"bottom-navigation\">\n            {onBackClicked && (\n              <IoIosArrowDropleft\n                className=\"back-button\"\n                onClick={onBackClicked}\n              />\n            )}\n            <button\n              className=\"next-button\"\n              onClick={() =>\n                onComplete(\n                  options\n                    .filter((option) => option.isSelected)\n                    .map((option) => option.value)\n                )\n              }\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MultiChoiceQuestion;\n","/Users/steven/STA/miricyl/client/src/components/TextBoxQuestion.js",["101"],"import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { IoIosArrowDropleft } from \"react-icons/io\";\nimport \"../styles/global.css\";\n\nconst TextBoxQuestion = ({\n  onComplete,\n  onBackClicked,\n  backgroundToUse = \"one\",\n  postcode,\n}) => {\n  const [text, setText] = useState(\"\");\n  const checkPostcode = () => {\n    if (postcode) {\n      setText(`${postcode}`);\n    }\n  };\n\n  useEffect(() => {\n    checkPostcode();\n  }, []);\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <div className={`question-${backgroundToUse}-container`}>\n      <div className=\"question-grid-container\">\n        <div className=\"title-description-container\">\n          <h1 className=\"question-title\">\n            Search mental health resources & services that can help you feel\n            better\n          </h1>\n          <h2 className=\"question-page-detail-text\">\n            Boost is here for you if you need trusted guidance on accessing\n            resources and services that can positively impact your mental\n            health. We will guide you in finding the treatment and help you\n            need.\n          </h2>\n        </div>\n        <div>\n          <div className=\"select-container-q4\">\n            <p className=\"question-text\">\n              Enter the first part of your postcode to find services and support\n              in your area\n            </p>\n\n            <input\n              className=\"postcode-select\"\n              type=\"text\"\n              value={text}\n              onChange={handleChange}\n              placeholder=\"Enter your postcode\"\n            ></input>\n\n            <br />\n          </div>\n\n          <div className=\"bottom-navigation\">\n            {onBackClicked && (\n              <IoIosArrowDropleft\n                className=\"back-button\"\n                onClick={onBackClicked}\n              />\n            )}\n            <button className=\"next-button\" onClick={() => onComplete(text)}>\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(TextBoxQuestion);\n","/Users/steven/STA/miricyl/client/src/components/Results.js",["102","103","104","105","106","107","108","109","110","111"],"/Users/steven/STA/miricyl/client/src/api/GoogleServer.js",[],["112","113"],"/Users/steven/STA/miricyl/client/src/api/nodeServer.js",[],"/Users/steven/STA/miricyl/client/src/telemetry/TelemetryService.js",[],"/Users/steven/STA/miricyl/client/src/telemetry/telemetry-provider.jsx",[],"/Users/steven/STA/miricyl/client/src/api/postcodeServer.js",[],"/Users/steven/STA/miricyl/client/src/components/FlagsProvider.js",["114"],"import React, { useEffect, createContext, useState } from \"react\";\nimport { firebase } from \"../firebase\";\n\nexport const FlagsContext = createContext({});\nconst remoteConfig = firebase.remoteConfig();\n\n// Only for development\nremoteConfig.settings = {\n  minimumFetchIntervalMillis: 300000,\n};\nconst FlagsProvider = ({ defaults, children }) => {\n  const [flags, setFlags] = useState(defaults);\n\n  useEffect(() => {\n    remoteConfig.defaultConfig = defaults;\n    remoteConfig\n      .fetchAndActivate()\n      .then((activated) => {\n        return remoteConfig.getAll();\n      })\n      .then((remoteFlags) => {\n        const newFlags = {\n          ...flags,\n        };\n        for (const [key, config] of Object.entries(remoteFlags)) {\n          if (config._value) {\n            newFlags[key] = parseInt(config._value);\n          }\n        }\n\n        setFlags(newFlags);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  return (\n    <FlagsContext.Provider value={flags}>{children}</FlagsContext.Provider>\n  );\n};\n\nexport default FlagsProvider;\n","/Users/steven/STA/miricyl/client/src/hooks/useFlags.js",["115"],"import React, { useContext } from \"react\";\nimport { FlagsContext } from \"../components/FlagsProvider\";\n\nexport const useFlags = () => {\n  const context = useContext(FlagsContext);\n  return context;\n};\n","/Users/steven/STA/miricyl/client/src/components/SubHeader.js",[],"/Users/steven/STA/miricyl/client/src/components/Header.js",[],"/Users/steven/STA/miricyl/client/src/components/BackButton.js",[],"/Users/steven/STA/miricyl/client/src/components/Filter.js",[],"/Users/steven/STA/miricyl/client/src/firebase.js",[],"/Users/steven/STA/miricyl/client/src/components/FilterSubSection.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":77,"column":54,"nodeType":"126","messageId":"127","endLine":77,"endColumn":56},{"ruleId":"124","severity":1,"message":"125","line":90,"column":40,"nodeType":"126","messageId":"127","endLine":90,"endColumn":42},{"ruleId":"124","severity":1,"message":"128","line":19,"column":26,"nodeType":"126","messageId":"127","endLine":19,"endColumn":28},{"ruleId":"129","severity":1,"message":"130","line":38,"column":28,"nodeType":"131","messageId":"132","endLine":38,"endColumn":30},{"ruleId":"133","severity":1,"message":"134","line":47,"column":6,"nodeType":"135","endLine":47,"endColumn":19,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":21,"column":6,"nodeType":"135","endLine":21,"endColumn":8,"suggestions":"138"},{"ruleId":"133","severity":1,"message":"139","line":48,"column":6,"nodeType":"135","endLine":48,"endColumn":45,"suggestions":"140"},{"ruleId":"133","severity":1,"message":"141","line":52,"column":6,"nodeType":"135","endLine":52,"endColumn":20,"suggestions":"142"},{"ruleId":"124","severity":1,"message":"128","line":121,"column":54,"nodeType":"126","messageId":"127","endLine":121,"endColumn":56},{"ruleId":"120","severity":1,"message":"143","line":145,"column":13,"nodeType":"122","messageId":"123","endLine":145,"endColumn":30},{"ruleId":"129","severity":1,"message":"130","line":150,"column":43,"nodeType":"131","messageId":"132","endLine":150,"endColumn":45},{"ruleId":"129","severity":1,"message":"144","line":151,"column":49,"nodeType":"131","messageId":"132","endLine":151,"endColumn":51},{"ruleId":"124","severity":1,"message":"125","line":167,"column":74,"nodeType":"126","messageId":"127","endLine":167,"endColumn":76},{"ruleId":"145","severity":1,"message":"146","line":319,"column":40,"nodeType":"147","endLine":319,"endColumn":55},{"ruleId":"145","severity":1,"message":"146","line":330,"column":44,"nodeType":"147","endLine":330,"endColumn":59},{"ruleId":"145","severity":1,"message":"146","line":379,"column":44,"nodeType":"147","endLine":379,"endColumn":59},{"ruleId":"116","replacedBy":"148"},{"ruleId":"118","replacedBy":"149"},{"ruleId":"133","severity":1,"message":"150","line":34,"column":6,"nodeType":"135","endLine":34,"endColumn":8,"suggestions":"151"},{"ruleId":"120","severity":1,"message":"152","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":13},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'useFlags' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selected'. Either include it or remove the dependency array.","ArrayExpression",["155"],"React Hook useEffect has a missing dependency: 'checkPostcode'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has a missing dependency: 'constructCharityObjects'. Either include it or remove the dependency array.",["157"],"React Hook useEffect has a missing dependency: 'sortCharities'. Either include it or remove the dependency array.",["158"],"'matchingCharities' is assigned a value but never used.","Array.prototype.filter() expects a return value from arrow function.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["153"],["154"],"React Hook useEffect has missing dependencies: 'defaults' and 'flags'. Either include them or remove the dependency array.",["159"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [optionsList, selected]",{"range":"170","text":"171"},"Update the dependencies array to be: [checkPostcode]",{"range":"172","text":"173"},"Update the dependencies array to be: [needs, supportTypes, personalisations, constructCharityObjects]",{"range":"174","text":"175"},"Update the dependencies array to be: [allCharities, sortCharities]",{"range":"176","text":"177"},"Update the dependencies array to be: [defaults, flags]",{"range":"178","text":"179"},[1203,1216],"[optionsList, selected]",[469,471],"[checkPostcode]",[1512,1551],"[needs, supportTypes, personalisations, constructCharityObjects]",[1601,1615],"[allCharities, sortCharities]",[928,930],"[defaults, flags]"]
=======
[{"/Users/steven/STA/miricyl/client/src/index.js":"1","/Users/steven/STA/miricyl/client/src/serviceWorker.js":"2","/Users/steven/STA/miricyl/client/src/App.js":"3","/Users/steven/STA/miricyl/client/src/components/FlagsProvider.js":"4","/Users/steven/STA/miricyl/client/src/components/Navbar.js":"5","/Users/steven/STA/miricyl/client/src/containers/HomePageContainer.js":"6","/Users/steven/STA/miricyl/client/src/firebase.js":"7","/Users/steven/STA/miricyl/client/src/components/TextBoxQuestion.js":"8","/Users/steven/STA/miricyl/client/src/components/MultiChoiceQuestion.js":"9","/Users/steven/STA/miricyl/client/src/api/nodeServer.js":"10","/Users/steven/STA/miricyl/client/src/telemetry/TelemetryService.js":"11","/Users/steven/STA/miricyl/client/src/telemetry/telemetry-provider.jsx":"12","/Users/steven/STA/miricyl/client/src/components/Results/Results.jsx":"13","/Users/steven/STA/miricyl/client/src/components/Header.js":"14","/Users/steven/STA/miricyl/client/src/components/SubHeader.js":"15","/Users/steven/STA/miricyl/client/src/components/BackButton.js":"16","/Users/steven/STA/miricyl/client/src/components/OrgCard/OrgCard.jsx":"17","/Users/steven/STA/miricyl/client/src/components/Filter/Filter.jsx":"18"},{"size":503,"mtime":1607860249312,"results":"19","hashOfConfig":"20"},{"size":5098,"mtime":1607860249313,"results":"21","hashOfConfig":"20"},{"size":539,"mtime":1610999232964,"results":"22","hashOfConfig":"20"},{"size":1060,"mtime":1609268658981,"results":"23","hashOfConfig":"20"},{"size":634,"mtime":1609268658983,"results":"24","hashOfConfig":"20"},{"size":7676,"mtime":1610999232967,"results":"25","hashOfConfig":"20"},{"size":295,"mtime":1609268658986,"results":"26","hashOfConfig":"20"},{"size":1813,"mtime":1609268658985,"results":"27","hashOfConfig":"20"},{"size":1873,"mtime":1609268658982,"results":"28","hashOfConfig":"20"},{"size":251,"mtime":1608500231982,"results":"29","hashOfConfig":"20"},{"size":1656,"mtime":1608500546342,"results":"30","hashOfConfig":"20"},{"size":1256,"mtime":1608500546343,"results":"31","hashOfConfig":"20"},{"size":4596,"mtime":1610999232967,"results":"32","hashOfConfig":"20"},{"size":240,"mtime":1609268658981,"results":"33","hashOfConfig":"20"},{"size":391,"mtime":1609268658984,"results":"34","hashOfConfig":"20"},{"size":299,"mtime":1610999232965,"results":"35","hashOfConfig":"20"},{"size":5400,"mtime":1610999232966,"results":"36","hashOfConfig":"20"},{"size":2926,"mtime":1610999232965,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ac0x9w",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/steven/STA/miricyl/client/src/index.js",[],["78","79"],"/Users/steven/STA/miricyl/client/src/serviceWorker.js",[],"/Users/steven/STA/miricyl/client/src/App.js",[],"/Users/steven/STA/miricyl/client/src/components/FlagsProvider.js",["80"],"import React, { useEffect, createContext, useState } from \"react\";\nimport { firebase } from \"../firebase\";\n\nexport const FlagsContext = createContext({});\nconst remoteConfig = firebase.remoteConfig();\n\n// Only for development\nremoteConfig.settings = {\n  minimumFetchIntervalMillis: 300000,\n};\nconst FlagsProvider = ({ defaults, children }) => {\n  const [flags, setFlags] = useState(defaults);\n\n  useEffect(() => {\n    remoteConfig.defaultConfig = defaults;\n    remoteConfig\n      .fetchAndActivate()\n      .then((activated) => {\n        return remoteConfig.getAll();\n      })\n      .then((remoteFlags) => {\n        const newFlags = {\n          ...flags,\n        };\n        for (const [key, config] of Object.entries(remoteFlags)) {\n          if (config._value) {\n            newFlags[key] = parseInt(config._value);\n          }\n        }\n\n        setFlags(newFlags);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  return (\n    <FlagsContext.Provider value={flags}>{children}</FlagsContext.Provider>\n  );\n};\n\nexport default FlagsProvider;\n","/Users/steven/STA/miricyl/client/src/components/Navbar.js",[],"/Users/steven/STA/miricyl/client/src/containers/HomePageContainer.js",[],"/Users/steven/STA/miricyl/client/src/firebase.js",[],"/Users/steven/STA/miricyl/client/src/components/TextBoxQuestion.js",["81"],"import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/global.css\";\nimport Header from \"./Header\";\nimport SubHeader from \"./SubHeader\";\nimport BackButton from \"./BackButton\";\n\nconst TextBoxQuestion = ({\n  onComplete,\n  onBackClicked,\n  backgroundToUse = \"one\",\n  postcode,\n}) => {\n  const [text, setText] = useState(\"\");\n  const checkPostcode = () => {\n    if (postcode) {\n      setText(`${postcode}`);\n    }\n  };\n\n  useEffect(() => {\n    checkPostcode();\n  }, []);\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <div className={`question-${backgroundToUse}-container`}>\n      <div className=\"question-grid-container\">\n        <div className=\"title-description-container\">\n          <Header />\n          <SubHeader />\n        </div>\n        <div>\n          <div className=\"select-container-q4\">\n            <p className=\"question-text\" test-id=\"question-title\">\n              Enter the first part of your postcode to find services and support\n              in your area\n            </p>\n\n            <input\n              className=\"postcode-select\"\n              type=\"text\"\n              value={text}\n              onChange={handleChange}\n              placeholder=\"Enter your postcode\"\n              test-id=\"text-input-field\"\n            ></input>\n\n            <br />\n          </div>\n\n          <div className=\"bottom-navigation\">\n            {onBackClicked && <BackButton onBackClicked={onBackClicked} />}\n            <button\n              className=\"next-button\"\n              onClick={() => onComplete(text)}\n              test-id=\"next-button\"\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(TextBoxQuestion);\n","/Users/steven/STA/miricyl/client/src/components/MultiChoiceQuestion.js",[],"/Users/steven/STA/miricyl/client/src/api/nodeServer.js",[],"/Users/steven/STA/miricyl/client/src/telemetry/TelemetryService.js",[],"/Users/steven/STA/miricyl/client/src/telemetry/telemetry-provider.jsx",[],"/Users/steven/STA/miricyl/client/src/components/Results/Results.jsx",[],"/Users/steven/STA/miricyl/client/src/components/Header.js",[],"/Users/steven/STA/miricyl/client/src/components/SubHeader.js",[],"/Users/steven/STA/miricyl/client/src/components/BackButton.js",[],"/Users/steven/STA/miricyl/client/src/components/OrgCard/OrgCard.jsx",["82","83","84"],"import React, { useState } from \"react\";\n\nimport * as styles from \"./orgCard.module.scss\";\nimport { IconContext } from \"react-icons\";\nimport { BiPhone } from \"react-icons/bi\";\nimport { BiEnvelope } from \"react-icons/bi\";\nimport { BiChat } from \"react-icons/bi\";\nimport { MdKeyboardArrowDown, MdKeyboardArrowUp } from \"react-icons/md\";\n\nimport ReactStars from \"react-rating-stars-component\";\n\nconst OrgCard = ({ charity }) => {\n  const [isExapnded, setIsExpanded] = useState(false);\n\n  return (\n    <div className={styles.container}>\n      <OrgOverview charity={charity} />\n      <OptionsMet services={charity.Services} />\n      <div className={styles.servicesContainer}>\n        {charity.Services.slice(\n          0,\n          isExapnded ? charity.Services.length : 2\n        ).map((service) => (\n          <Service service={service} />\n        ))}\n      </div>\n      <OrgDetails\n        email={charity.Email}\n        phone={charity.PhoneNo}\n        address={charity.Address}\n      />\n      <button\n        className={styles.expandButtonContainer}\n        onClick={() => {\n          setIsExpanded(!isExapnded);\n        }}\n        disabled={charity.Services.length <= 2}\n      >\n        {isExapnded ? (\n          <MdKeyboardArrowDown className={`${styles.expandIcon}`} />\n        ) : (\n          <MdKeyboardArrowUp\n            className={`${styles.expandIcon} ${\n              charity.Services.length <= 2 && styles.disabled\n            }`}\n          />\n        )}\n      </button>\n    </div>\n  );\n};\n\nconst OrgOverview = ({ charity }) => {\n  return (\n    <div className={styles.overviewContainer}>\n      <div className={styles.logoContainer}>\n        <a href={charity.OrgURL} target=\"_blank\">\n          <img\n            className={styles.orgLogo}\n            src={`/images/$web/${charity.OrgID}.png`}\n            alt={`${charity.OrgName} logo`}\n          />\n        </a>\n      </div>\n      <div className={styles.overviewInformationContainer}>\n        <span className={styles.orgName}>{charity.OrgName}</span>\n        <span className={styles.orgDescription}>{charity.OrgDescription}</span>\n        <span>Ratings placeholder</span>\n      </div>\n      <div className={styles.distanceBox}>tbi</div>\n    </div>\n  );\n};\n\nconst OptionsMet = ({ services }) => {\n  const uniqueMatchedNeeds = [\n    ...new Set(...services.map((service) => service.matchedNeeds)),\n  ];\n\n  const uniqueMatchedSupportTypes = [\n    ...new Set(...services.map((service) => service.matchedTypesOfSupport)),\n  ];\n  const uniqueMatchedPersonalisations = [\n    ...new Set(...services.map((service) => service.matchedPersonalisations)),\n  ];\n\n  return (\n    <div className={styles.optionsMetContainer}>\n      {uniqueMatchedNeeds.map((need) => (\n        <span className={`${styles.optionBox} ${styles.need}`}>{need}</span>\n      ))}\n      {uniqueMatchedSupportTypes.map((supportType) => (\n        <span className={`${styles.optionBox} ${styles.supportType}`}>\n          {supportType}\n        </span>\n      ))}\n      {uniqueMatchedPersonalisations.map((personalisation) => (\n        <span className={`${styles.optionBox} ${styles.personalisation}`}>\n          {personalisation}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nconst Service = ({ service }) => {\n  return (\n    <div className={styles.serviceContainer}>\n      <span className={styles.serviceName}>{service.ServiceName}</span>\n      <span className={styles.serviceInfo}>{service.PhoneNo}</span>\n      <span className={styles.serviceInfo}>{service.OpeningTimes}</span>\n      <span className={styles.serviceInfo}>{service.PhysicalAddress}</span>\n      <div className={styles.serviceContactBoxes}>\n        {service.PhoneNo && (\n          <button className=\"results-list-button\" type=\"button\">\n            <IconContext.Provider\n              value={{ className: \"results-react-button-icon\" }}\n            >\n              <a href={\"tel:\" + service.PhoneNo}>\n                <BiPhone /> Call\n              </a>\n            </IconContext.Provider>\n          </button>\n        )}\n\n        {service.ServiceUrl && (\n          <button className=\"results-list-button\" type=\"button\">\n            <IconContext.Provider\n              value={{ className: \"results-react-button-icon\" }}\n            >\n              <a href={service.ServiceUrl} target=\"_blank\">\n                <BiChat /> Chat{\" \"}\n              </a>\n            </IconContext.Provider>\n          </button>\n        )}\n\n        {service.EmailAddress && (\n          <button className=\"results-list-button\" type=\"button\">\n            <IconContext.Provider\n              value={{ className: \"results-react-button-icon\" }}\n            >\n              <a class=\"mailto\" href={\"mailto:\" + service.EmailAddress}>\n                <BiEnvelope /> Email\n              </a>\n            </IconContext.Provider>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst OrgDetails = ({ phone, email, address }) => {\n  return (\n    <div className={styles.orgDetailsContainer}>\n      <span className={styles.orgDetailsTitle}>\n        Organisation contact details:\n      </span>\n      <div className={styles.contactDetailsContainer}>\n        <span>\n          <b>Phone:</b> {email ?? \"placeholder\"}\n        </span>\n        <span>\n          <b>Email:</b> {phone ?? \"placeholder\"}\n        </span>\n        <span>\n          <b>Address:</b> {address ?? \"placeholder\"}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default OrgCard;\n","/Users/steven/STA/miricyl/client/src/components/Filter/Filter.jsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":34,"column":6,"nodeType":"91","endLine":34,"endColumn":8,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":23,"column":6,"nodeType":"91","endLine":23,"endColumn":8,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":10,"column":8,"nodeType":"97","messageId":"98","endLine":10,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":57,"column":34,"nodeType":"101","endLine":57,"endColumn":49},{"ruleId":"99","severity":1,"message":"100","line":131,"column":44,"nodeType":"101","endLine":131,"endColumn":59},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'defaults' and 'flags'. Either include them or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'checkPostcode'. Either include it or remove the dependency array.",["105"],"no-unused-vars","'ReactStars' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [defaults, flags]",{"range":"110","text":"111"},"Update the dependencies array to be: [checkPostcode]",{"range":"112","text":"113"},[928,930],"[defaults, flags]",[523,525],"[checkPostcode]"]
>>>>>>> uat
