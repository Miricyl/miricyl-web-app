[{"C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\index.js":"1","C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\App.js":"2","C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\serviceWorker.js":"3","C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\containers\\HomePageContainer.js":"4","C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\components\\Navbar.js":"5","C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\components\\MultiChoiceQuestion.js":"6","C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\components\\TextBoxQuestion.js":"7","C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\components\\Results.js":"8","C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\api\\nodeServer.js":"9","C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\telemetry\\TelemetryService.js":"10","C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\telemetry\\telemetry-provider.jsx":"11","C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\components\\Filter.js":"12"},{"size":520,"mtime":1607175593246,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607270174959,"results":"15","hashOfConfig":"14"},{"size":5239,"mtime":1607175593247,"results":"16","hashOfConfig":"14"},{"size":6417,"mtime":1609173439970,"results":"17","hashOfConfig":"14"},{"size":518,"mtime":1607175593236,"results":"18","hashOfConfig":"14"},{"size":2203,"mtime":1609171706523,"results":"19","hashOfConfig":"14"},{"size":2216,"mtime":1607955707126,"results":"20","hashOfConfig":"14"},{"size":11513,"mtime":1609170379082,"results":"21","hashOfConfig":"14"},{"size":262,"mtime":1608226070397,"results":"22","hashOfConfig":"14"},{"size":1706,"mtime":1608584865580,"results":"23","hashOfConfig":"14"},{"size":1294,"mtime":1608584865580,"results":"24","hashOfConfig":"14"},{"size":665,"mtime":1609170419905,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mxa1dd",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\index.js",[],"C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\App.js",[],"C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\serviceWorker.js",[],"C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\containers\\HomePageContainer.js",["52","53"],"C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\components\\MultiChoiceQuestion.js",["54","55"],"C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\components\\TextBoxQuestion.js",["56"],"C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\components\\Results.js",["57","58","59","60","61","62","63","64","65","66","67"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/global.css\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { BiPhone } from \"react-icons/bi\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { BiChat } from \"react-icons/bi\";\r\nimport { BiMap } from \"react-icons/bi\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { IoIosArrowDropleft } from \"react-icons/io\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nconst Results = ({\r\n  onBackClicked,\r\n  selectedNeeds,\r\n  selectedSupportTypes,\r\n  selectedPersonalisations,\r\n  postcode = \"\",\r\n  charities,\r\n}) => {\r\n  const [prioritisedResults, setprioritisedResults] = useState([]);\r\n  const [allCharities, setAllCharities] = useState([]);\r\n\r\n  useEffect(() => {\r\n    constructCharityObjects();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    sortCharities();\r\n  }, [allCharities]);\r\n\r\n  const sortCharities = () => {\r\n    let filteredCharities = allCharities;\r\n\r\n    // if (selectedSupportTypes.length > 0) {\r\n    //   filteredCharities = filteredCharities.filter(\r\n    //     (charity) =>\r\n    //       charity.typesOfSupportOffered.filter((supportType) =>\r\n    //         selectedSupportTypes.includes(supportType)\r\n    //       ).length > 0\r\n    //   );\r\n    // }\r\n\r\n    if (selectedNeeds.length > 0) {\r\n      filteredCharities = filteredCharities.filter((charity) => {\r\n        return selectedNeeds.every((need) => charity.needsMet.includes(need));\r\n      });\r\n    }\r\n\r\n    if (postcode != \"\") {\r\n      filteredCharities = filteredCharities.filter(\r\n        (charity) => charity.OuterCode.toUpperCase() == postcode.toUpperCase()\r\n      );\r\n    }\r\n\r\n    const prioritisedCharities = filteredCharities\r\n      .filter((charity) => charity.NationalService === \"YES\" || postcode != \"\")\r\n      .sort(\r\n        (a, b) =>\r\n          noOfMatchedSupportTypesAndPersonalisations(a, b) ||\r\n          noOfMatchedPersonalisations(a, b) ||\r\n          noOfMatchedSupportTypes(a, b) ||\r\n          alphabetical(a, b)\r\n      );\r\n\r\n    setprioritisedResults(prioritisedCharities);\r\n  };\r\n\r\n  const noOfMatchedSupportTypesAndPersonalisations = (a, b) =>\r\n    b.servicesWithMatchedPersonalisationsAndSupportTypes.length -\r\n    a.servicesWithMatchedPersonalisationsAndSupportTypes.length;\r\n\r\n  const noOfMatchedSupportTypes = (a, b) =>\r\n    b.matchedTypesOfSupportOffered.length -\r\n    a.matchedTypesOfSupportOffered.length;\r\n\r\n  const noOfMatchedPersonalisations = (a, b) =>\r\n    b.matchedPersonalisations.length - a.matchedPersonalisations.length;\r\n\r\n  const alphabetical = (a, b) => a.OrgName.localeCompare(b.OrgName);\r\n\r\n  // const needsMet = (a, b) => b.needsMet.length - a.needsMet.length;\r\n\r\n  const constructCharityObjects = () => {\r\n    let locationSortedCharities;\r\n\r\n    if (postcode == \"\") {\r\n      locationSortedCharities = charities.sort((a, b) => {\r\n        return a.NationalService === \"YES\"\r\n          ? -1\r\n          : b.NationalService === \"YES\"\r\n          ? 1\r\n          : 0;\r\n      });\r\n    } else {\r\n      locationSortedCharities = charities.sort((a, b) => {\r\n        return a.OuterCode.toUpperCase() === postcode.toUpperCase()\r\n          ? -1\r\n          : b.OuterCode.toUpperCase() === postcode.toUpperCase()\r\n          ? 1\r\n          : 0;\r\n      });\r\n    }\r\n\r\n    const uniqueOrgIds = [\r\n      ...new Set(locationSortedCharities.map((charity) => charity.OrgID)),\r\n    ];\r\n\r\n    const charityObjects = uniqueOrgIds.map((orgId) => {\r\n      const charity = charities.find((charity) => charity.OrgID === orgId);\r\n      let servicesFromCharity = charities.filter((charity) => {\r\n        return (\r\n          charity.OrgID == orgId &&\r\n          (postcode === \"\"\r\n            ? charity.NationalService === \"YES\"\r\n            : charity.OuterCode.toUpperCase() === postcode.toUpperCase())\r\n        );\r\n      });\r\n\r\n      // This filtering logic will need to be changed once the use filter interface is implemented\r\n      // as for now it deletes any unselected filters which the user may wish to enable\r\n\r\n      const needsMet = [\r\n        ...new Set(servicesFromCharity.map((service) => service.UserOption)),\r\n      ].filter((need) => selectedNeeds.includes(need));\r\n\r\n      const typesOfSupportOffered = [\r\n        ...new Set(\r\n          servicesFromCharity.map((service) => service.UserOption_Type)\r\n        ),\r\n      ];\r\n\r\n      const matchedTypesOfSupportOffered = [\r\n        ...new Set(\r\n          servicesFromCharity\r\n            .filter(\r\n              (service) =>\r\n                (selectedNeeds.includes(service.UserOption) ||\r\n                  selectedNeeds.length === 0) &&\r\n                selectedSupportTypes.includes(service.UserOption_Type)\r\n            )\r\n            .map((matchedService) => matchedService.UserOption_Type)\r\n        ),\r\n      ];\r\n\r\n      const personalisationsMet = [\r\n        ...new Set(\r\n          servicesFromCharity.map((service) => service.Personalisation)\r\n        ),\r\n      ];\r\n\r\n      const matchedPersonalisations = [\r\n        ...new Set(\r\n          servicesFromCharity\r\n            .filter(\r\n              (service) =>\r\n                (selectedNeeds.includes(service.UserOption) ||\r\n                  selectedNeeds.length === 0) &&\r\n                selectedPersonalisations.includes(service.Personalisation)\r\n            )\r\n            .map((matchedService) => matchedService.Personalisation)\r\n        ),\r\n      ];\r\n\r\n      const servicesWithMatchedPersonalisationsAndSupportTypes = [\r\n        ...new Set(\r\n          servicesFromCharity\r\n            .filter(\r\n              (service) =>\r\n                (selectedNeeds.includes(service.UserOption) ||\r\n                  selectedNeeds.length === 0) &&\r\n                selectedPersonalisations.includes(service.Personalisation) &&\r\n                selectedSupportTypes.includes(service.UserOption_Type)\r\n            )\r\n            .map((matchedService) => matchedService.Personalisation)\r\n        ),\r\n      ];\r\n\r\n      // This stuff is causing pass by reference issues currently\r\n      // delete charity.TypeOfSupport;\r\n      // delete charity.UserOption_Type;\r\n      // delete charity.UserOption;\r\n      // delete charity.Personalisation;\r\n\r\n      return {\r\n        ...charity,\r\n        needsMet,\r\n        typesOfSupportOffered,\r\n        matchedTypesOfSupportOffered,\r\n        personalisationsMet,\r\n        matchedPersonalisations,\r\n        servicesWithMatchedPersonalisationsAndSupportTypes,\r\n      };\r\n    });\r\n\r\n    setAllCharities(charityObjects);\r\n  };\r\n\r\n  const PrioritisedListOfCharities = prioritisedResults.map((charity) => (\r\n    <div className=\"results-list-container\" key={charity.PlaceID}>\r\n      <div className=\"results-title-container\">\r\n        {charity.Logo ? (\r\n          <a href={charity.ServiceURL} target=\"_blank\">\r\n            <img className=\"results-list-logo\" src={charity.Logo} />\r\n          </a>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n\r\n        <div className=\"results-list-title-service\">\r\n          {charity.ServiceURL ? (\r\n            <p className=\"results-list-title\">\r\n              {\" \"}\r\n              <a href={charity.ServiceURL} target=\"_blank\">\r\n                {charity.OrgName}\r\n              </a>\r\n            </p>\r\n          ) : (\r\n            <p className=\"results-list-title\">{charity.OrgName}</p>\r\n          )}\r\n\r\n          {/* <p className=\"results-list-service-description\">\r\n            {charity.ServiceDescription}\r\n          </p> */}\r\n          {charity.googleRating ? (\r\n            <p>\r\n              {\" \"}\r\n              <ReactStars\r\n                count={5}\r\n                value={charity.googleRating}\r\n                isHalf={true}\r\n              />\r\n              {charity.googleRating}{\" \"}\r\n            </p>\r\n          ) : (\r\n            <p>\r\n              {\" \"}\r\n              <ReactStars count={5} value={0} isHalf={true} />\r\n              No ratings found{\" \"}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"results-button-container\">\r\n        {charity.PhoneNo && (\r\n          <button className=\"results-list-button\" type=\"button\">\r\n            <IconContext.Provider\r\n              value={{ className: \"results-react-button-icon\" }}\r\n            >\r\n              <a href={\"tel:\" + charity.PhoneNo}>\r\n                <BiPhone /> Call\r\n              </a>\r\n            </IconContext.Provider>\r\n          </button>\r\n        )}\r\n\r\n        {charity.ServiceURL && (\r\n          <button className=\"results-list-button\" type=\"button\">\r\n            <IconContext.Provider\r\n              value={{ className: \"results-react-button-icon\" }}\r\n            >\r\n              <a href={charity.ServiceURL} target=\"_blank\">\r\n                <BiChat /> Chat{\" \"}\r\n              </a>\r\n            </IconContext.Provider>\r\n          </button>\r\n        )}\r\n\r\n        {charity.EmailAddress && (\r\n          <button className=\"results-list-button\" type=\"button\">\r\n            <IconContext.Provider\r\n              value={{ className: \"results-react-button-icon\" }}\r\n            >\r\n              <a class=\"mailto\" href={\"mailto:\" + charity.EmailAddress}>\r\n                <BiEnvelope /> Email\r\n              </a>\r\n            </IconContext.Provider>\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {charity.OpeningTime && (\r\n        <p className=\"results-list-sub-title\">\r\n          <IconContext.Provider\r\n            value={{ className: \"results-react-icons-detail\" }}\r\n          >\r\n            {\" \"}\r\n            <BiPhone /> Phone Support:\r\n          </IconContext.Provider>\r\n        </p>\r\n      )}\r\n      <p className=\"results-list-service-detail\">{charity.OpeningTime}</p>\r\n\r\n      {charity.PhysicalAddress && (\r\n        <p className=\"results-list-sub-title\">\r\n          <IconContext.Provider\r\n            value={{ className: \"results-react-icons-detail\" }}\r\n          >\r\n            {\" \"}\r\n            <BiMap /> Address:\r\n          </IconContext.Provider>\r\n        </p>\r\n      )}\r\n      <p className=\"results-list-service-detail\">{charity.PhysicalAddress}</p>\r\n\r\n      {/* TODO: REMOVE INLINE CSS */}\r\n      <div style={{ display: \"flex\" }}>\r\n        {charity.needsMet.map((need) => (\r\n          <span className=\"results-list-needs-tag\">{need}</span>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\" }}>\r\n        {charity.personalisationsMet.map((personalisation) => (\r\n          <span className=\"results-list-personalisation-tag\">\r\n            {personalisation}\r\n          </span>\r\n        ))}\r\n      </div>\r\n\r\n      {charity.typesOfSupportOffered && (\r\n        <p className=\"results-list-sub-title\">Types of Service:</p>\r\n      )}\r\n\r\n      {charity.typesOfSupportOffered.map((supportType) => {\r\n        return <li className=\"results-list-service-detail\">{supportType}</li>;\r\n      })}\r\n\r\n      {charity.OrgDescription && (\r\n        <p className=\"results-list-sub-title\">About</p>\r\n      )}\r\n      <p className=\"results-list-service-detail\">{charity.OrgDescription}</p>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"results-page-container\">\r\n      <div className=\"results-wrapper\">\r\n        <div className=\"title-description-container\">\r\n          <h1 className=\"question-title\">Search results</h1>\r\n        </div>\r\n        <div className=\"results-page-display\">{PrioritisedListOfCharities}</div>\r\n        <div className=\"bottom-navigation\">\r\n          {onBackClicked && (\r\n            <IoIosArrowDropleft\r\n              className=\"back-button\"\r\n              onClick={onBackClicked}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Results);\r\n",["68","69"],"C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\api\\nodeServer.js",[],"C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\telemetry\\TelemetryService.js",[],"C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\telemetry\\telemetry-provider.jsx",[],"C:\\Users\\Michael\\Documents\\Developement\\STA\\Miricyl\\Miricyl\\client\\src\\components\\Filter.js",[],{"ruleId":"70","severity":1,"message":"71","line":78,"column":54,"nodeType":"72","messageId":"73","endLine":78,"endColumn":56},{"ruleId":"70","severity":1,"message":"71","line":86,"column":40,"nodeType":"72","messageId":"73","endLine":86,"endColumn":42},{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"78","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"80","line":21,"column":6,"nodeType":"81","endLine":21,"endColumn":8,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":30,"column":6,"nodeType":"81","endLine":30,"endColumn":21,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"85","line":34,"column":6,"nodeType":"81","endLine":34,"endColumn":20,"suggestions":"86"},{"ruleId":"70","severity":1,"message":"71","line":54,"column":18,"nodeType":"72","messageId":"73","endLine":54,"endColumn":20},{"ruleId":"70","severity":1,"message":"87","line":56,"column":54,"nodeType":"72","messageId":"73","endLine":56,"endColumn":56},{"ruleId":"70","severity":1,"message":"71","line":61,"column":74,"nodeType":"72","messageId":"73","endLine":61,"endColumn":76},{"ruleId":"70","severity":1,"message":"87","line":93,"column":18,"nodeType":"72","messageId":"73","endLine":93,"endColumn":20},{"ruleId":"70","severity":1,"message":"87","line":119,"column":25,"nodeType":"72","messageId":"73","endLine":119,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":209,"column":40,"nodeType":"90","endLine":209,"endColumn":55},{"ruleId":"91","severity":1,"message":"92","line":210,"column":13,"nodeType":"93","endLine":210,"endColumn":69},{"ruleId":"88","severity":1,"message":"89","line":220,"column":44,"nodeType":"90","endLine":220,"endColumn":59},{"ruleId":"88","severity":1,"message":"89","line":269,"column":44,"nodeType":"90","endLine":269,"endColumn":59},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkPostcode'. Either include it or remove the dependency array.","ArrayExpression",["98"],"React Hook useEffect has a missing dependency: 'constructCharityObjects'. Either include it or remove the dependency array.",["99"],"React Hook useEffect has a missing dependency: 'sortCharities'. Either include it or remove the dependency array.",["100"],"Expected '===' and instead saw '=='.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["101"],"no-negated-in-lhs",["102"],{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [checkPostcode]",{"range":"109","text":"110"},"Update the dependencies array to be: [constructCharityObjects, selectedNeeds]",{"range":"111","text":"112"},"Update the dependencies array to be: [allCharities, sortCharities]",{"range":"113","text":"114"},[489,491],"[checkPostcode]",[932,947],"[constructCharityObjects, selectedNeeds]",[1001,1015],"[allCharities, sortCharities]"]